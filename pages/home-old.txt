import Head from 'next/head'
import Image from 'next/image'
import { 
  Container, Grid,
  Card } from 'semantic-ui-react'

import Header from '@/component/Header'
import HeroSection from '@/component/HeroSection'
import { useSelector } from 'react-redux'
import styles from '../styles/sass/components/Home.module.scss'

import CategoryProduct from '../component/Home/CategoryProduct'
import HomeCar from '../component/Home/HomeCar'
import Cars from '../component/Home/Cars'

export default function Home() {
  // const getWebUser = useSelector((state) => state.WebUserReducer);
  const [isLoading, setIsLoading] = useState(true);
  const [Carproduct, setCarproduct] = useState();
  function getProduct() {
    setIsLoading(true);
    Http.get(GET_Cart_PRODUCT)
      .then((res) => {
        const data = res.data;
        setCarproduct(data);
        setIsLoading(false);
      })
      .catch((error) => {
        const response = error.response;
        return { error: response };
      });
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        
        <HeroSection heading={"Home page"} />
        <CategoryProduct />
        {/*  */}
        <holmeCar />
        <section className={styles.CatSection + ' section-padding'}>
          <Container>
          <Grid stackable>
          <Grid.Row>
            <h2>Urgent Selling Items</h2>
          </Grid.Row>
          </Grid>
          <Grid columns='equal'>
            <Grid.Row>
              
            </Grid.Row>
          </Grid>
          {/*  */}
          </Container>
        </section>

        <section className={styles.CatSection + ' section-padding'}>
          <Container>
          <Grid stackable>
          <Grid.Row>
            <h2>Cars</h2>
          </Grid.Row>
          </Grid>
          <Grid stackable>
              {!isLoading ? (
                <>
                  <Grid.Row columns={3}>
                    {Getproduct ? (
                      <>
                        {Getproduct.map((item, i) => {
                          console.log("item", item);
                          return <HomeCar item={item} key={i} />;
                        })}
                      </>
                    ) : (
                      ""
                    )}
                  </Grid.Row>
                </>
              ) : (
                <>
                  <LoadingArea />
                </>
              )}
            </Grid>
          {/*  */}
          </Container>
        </section>
      </main>
    </>
  )
}
